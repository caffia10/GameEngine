// Project Config
.GameName = 'game'

// Paths
.CorePath = 'src\Core'
.EnginePath = 'src\Engines'
.GamePath = 'src\Game'
.EditorPath = 'src\Editor'
.ToolsSourcePath = 'src\Tools'

// types
.OutputPath = 'build'
.BinPath = 'bin'
.SolutionPath = 'src'


// Includes
#include "build/paths.bff"
#include "compiler.bff"


.AllTargets = {}


ForEach(.BuildType in .BuildTypes)
{
	Using(.BuildType)

	// Sources
	Unity('Core_Unity_$BuildTypeName$')
	{
		.UnityInputPath = '$CorePath$'
		.UnityOutputPath = '$OutputPath$/$BuildTypeName$'
		.UnityOutputPattern = "CoreUnity.cpp"
		.UnityNumFiles = 1
	}

	Unity('Preprocessor_Unity_$BuildTypeName$')
	{
		.UnityInputPath = '$ToolsSourcePath$'
		.UnityOutputPath = '$OutputPath$/$BuildTypeName$'
		.UnityOutputPattern = "PreprocessorUnity.cpp"
		.UnityNumFiles = 1
	}

	Unity('Engine_Unity_$BuildTypeName$')
	{
		.UnityInputPath = 'EnginePath'
		.UnityOutputPath = '$OutputPath$/$BuildTypeName$'
		.UnityOutputPattern = "EngineUnity.cpp"
		.UnityNumFiles = 1
	}

	Unity('Game_Unity_$BuildTypeName$')
	{
		.UnityInputPath = '$GamePath$'
		.UnityOutputPath = '$OutputPath$/$BuildTypeName$'
		.UnityOutputPattern = "GameUnity.cpp"
		.UnityNumFiles = 1
	}

	Unity('Editor_Unity_$BuildTypeName$')
	{
		.UnityInputPath = '$EditorPath$'
		.UnityOutputPath = '$OutputPath$/$BuildTypeName$'
		.UnityOutputPattern = "EditorUnity.cpp"
		.UnityNumFiles = 1
	}

	// Core lib
	Library('CoreLib_$BuildTypeName$')
	{
		.CompilerOptions = '$ExeCompilerOptions$'
		.CompilerInputUnity =   'Core_Unity_$BuildTypeName$'
		.CompilerOutputPath = '$OutputPath$/$BuildTypeName$'
		.LibrarianOutput = '$OutputPath$/$BuildTypeName$/lib/Core.lib'
	}

	// Engine lib
	Library('EngineLib_$BuildTypeName$')
	{
		.CompilerOptions = '$ExeCompilerOptions$'
		.CompilerInputUnity =   'Engine_Unity_$BuildTypeName$'
		.LibrarianAdditionalInputs   = { 'CoreLib_$BuildTypeName$' } 
		.CompilerOutputPath = '$OutputPath$/$BuildTypeName$'
		.LibrarianOutput = '$OutputPath$/$BuildTypeName$/lib/Engine.lib'
	}

	// Game dll
	DLL( 'GameDLL_$BuildTypeName$' )
	{
		.LinkerOptions = '$ExeLinkerOptions$';
		.LinkerOutput = '$OutputPath$/Game$BuildTypeName$.dll';
		.Libraries = {
			'CoreLib_$BuildTypeName$',
			'EngineLib_$BuildTypeName$'
		};
		.Libraries2 = 
		{
			'Game_Unity_$BuildTypeName$'
		};
	}

	// Game
	Executable('Game_$BuildTypeName$')
	{
		.LinkerOptions = '$ExeLinkerOptions$ /SUBSYSTEM:WINDOWS,5.02'
		.LinkerOutput = '$BinPath$/GameEngine$BuildTypeSufix$.exe'
		.Libraries = {
			'GameDLL_$BuildTypeName$',
		}
	}

	// ImGui
	ObjectList('ImGuiSource_$BuildTypeName$')
	{
		.CompilerOptions = '$ExeCompilerOptions$ -DIMGUI_IMPL_OPENGL_LOADER_CUSTOM'
		.CompilerInputFiles = {
			'external/include/imgui/imgui_impl.cpp',
		}
		.CompilerOutputPath = '$OutputPath$/$BuildTypeName$'
	}
	// Win32 Platform Game
	ObjectList('EditorSource_$BuildTypeName$')
	{
		.CompilerOptions = '$ExeCompilerOptions$  -DUSING_IMGUI=1'
		.CompilerInputUnity =   'Editor_Unity_$BuildTypeName$'
		.CompilerOutputPath = '$OutputPath$/$BuildTypeName$'
	}
	Executable('Editor_$BuildTypeName$')
	{
		.LinkerOptions = '$ExeLinkerOptions$ /SUBSYSTEM:WINDOWS,5.02'
		.LinkerOutput = '$BinPath$/Editor$BuildTypeSufix$.exe'
		.Libraries = {
			'ImGuiSource_$BuildTypeName$',
			'GameDLL_$BuildTypeName$'
			'EditorSource_$BuildTypeName$',
		}
	}

		// Preprocessor
	ObjectList('PreprocessorSource_$BuildTypeName$')
	{
		.CompilerOptions = '$ExeCompilerOptions$'
		.CompilerInputUnity =   'Preprocessor_Unity_$BuildTypeName$'
		.CompilerOutputPath = '$OutputPath$/$BuildTypeName$'
	}
	Executable('Preprocessor_$BuildTypeName$')
	{
		.LinkerOptions = .ExeLinkerOptions + ' /SUBSYSTEM:CONSOLE'
		.LinkerOutput = '$BinPath$/Preprocessor$BuildTypeSufix$.exe'
		.Libraries = {
			'CoreLib_$BuildTypeName$',
			'PreprocessorSource_$BuildTypeName$'
		}
	}

	// Add to all targets
	^AllTargets + 'Editor_$BuildTypeName$'

}

Alias('all') { .Targets = .AllTargets }


// VS Solution
VCXProject('Core_Project')
{
	.ProjectOutput = '$CorePath$\Core.vcxproj'

	.ProjectInputPaths = '$CorePath$\'
	.ProjectBasePath = './'

	.ProjectConfigs = {}
	ForEach(.BuildType in .BuildTypes)
	{
		Using(.BuildType)
		.Config = [
			.Platform = 'X64'
			.Config = .BuildTypeName
			.Target = 'CoreLib_$BuildTypeName$'
		]
		^ProjectConfigs + .Config
	}

	.ProjectBuildCommand = 'cd ^$(SolutionDir)\.. &amp; fbuild -ide CoreLib_^$(Configuration)'
	.ProjectRebuildCommand = 'cd ^$(SolutionDir)\.. &amp; fbuild -ide -clean CoreLib_^$(Configuration)'
}
VCXProject('Engines_Project')
{
	.ProjectOutput = '$EnginePath$\Engines.vcxproj'

	.ProjectInputPaths = '$EnginePath$\'
	.ProjectBasePath = './'
	

	.ProjectConfigs = {}
	ForEach(.BuildType in .BuildTypes)
	{
		Using(.BuildType)
		.Config = [
			.Platform = 'X64'
			.Config = .BuildTypeName
		]
		^ProjectConfigs + .Config
	}

	.ProjectBuildCommand = 'cd ^$(SolutionDir)\.. &amp; fbuild -ide EngineLib_^$(Configuration)'
	.ProjectRebuildCommand = 'cd ^$(SolutionDir)\.. &amp; fbuild -ide -clean EngineLib_^$(Configuration)'
}

VCXProject('Game_Project')
{
	.ProjectOutput = '$GamePath$\Game.vcxproj'

	.ProjectInputPaths = '$GamePath$\'
	.ProjectBasePath = './'

	.ProjectConfigs = {}
	ForEach(.BuildType in .BuildTypes)
	{
		Using(.BuildType)
		.Config = [
			.Platform = 'X64'
			.Config = .BuildTypeName
			.Target = 'Game_$BuildTypeName$'
		]
		^ProjectConfigs + .Config
	}

	.ProjectBuildCommand = 'cd ^$(SolutionDir)\.. &amp; fbuild -ide Game_^$(Configuration)'
	.ProjectRebuildCommand = 'cd ^$(SolutionDir)\.. &amp; fbuild -ide -clean Game_^$(Configuration)'
}

VCXProject('Editor_Project')
{
	.ProjectOutput = '$EditorPath$\Editor.vcxproj'

	.ProjectInputPaths = '$EditorPath$\'
	.ProjectBasePath = './'

	.ProjectConfigs = {}
	ForEach(.BuildType in .BuildTypes)
	{
		Using(.BuildType)
		.Config = [
			.Platform = 'X64'
			.Config = .BuildTypeName
			.Target = 'Editor_$BuildTypeName$'
		]
		^ProjectConfigs + .Config
	}

	.ProjectBuildCommand = 'cd ^$(SolutionDir)\.. &amp; fbuild -ide Editor_^$(Configuration)'
	.ProjectRebuildCommand = 'cd ^$(SolutionDir)\.. &amp; fbuild -ide -clean Editor_^$(Configuration)'
}

VCXProject('Preprocessor_Project')
{
	.ProjectOutput = '$ToolsSourcePath$\Preprocessor.vcxproj'

	.ProjectInputPaths = '$ToolsSourcePath$\'
	.ProjectBasePath = './'

	.ProjectConfigs = {}
	ForEach(.BuildType in .BuildTypes)
	{
		Using(.BuildType)
		.Config = [
			.Platform = 'X64'
			.Config = .BuildTypeName
			.Target = 'Preprocessor_$BuildTypeName$'
		]
		^ProjectConfigs + .Config
	}

	.ProjectBuildCommand = 'cd ^$(SolutionDir)\.. &amp; fbuild -ide Preprocessor_^$(Configuration)'
	.ProjectRebuildCommand = 'cd ^$(SolutionDir)\.. &amp; fbuild -ide -clean Preprocessor_^$(Configuration)'
}

VSSolution('GameEngine_Solution')
{
	.FolderA =
	[
		.Path      = '01 - Core'
		.Projects  = { 'Core_Project'}
	]
	.FolderB = 
	[
		.Path      = '02 - Engines'
		.Projects  = { 'Engines_Project' }
	]
	.FolderC = 
	[
		.Path      = '03 - Game'
		.Projects  = { 'Game_Project' }
	]
	.FolderD = 
	[
		.Path      = '04 - Editor'
		.Projects  = { 'Editor_Project' }
	]
	.FolderE = 
	[
		.Path      = '05 - Tools'
		.Projects  = { 'Preprocessor_Project' }
	]
	.SolutionFolders = { .FolderA, .FolderB, .FolderC, .FolderD, .FolderE }

	.SolutionOutput = '$SolutionPath$/GameEngine.sln'
	.SolutionProjects = {'Core_Project','Engines_Project', 'Game_Project', 'Editor_Project','Preprocessor_Project',}
	.SolutionConfigs = {}

	ForEach(.BuildType in .BuildTypes)
	{
		Using(.BuildType)
		.Config = [
			.Platform = 'X64'
			.Config = .BuildTypeName
		]
		^SolutionConfigs + .Config
	}

	.SolutionVisualStudioVersion = .VSVersion
	.SolutionMinimumVisualStudioVersion = .VSMinVersion
	.SolutionBuildProject = {'Core_Project','Editor_Project', 'Game_Project', 'Preprocessor_Project'}
	
}